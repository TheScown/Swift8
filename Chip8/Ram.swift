//
//  Ram.swift
//  Chip8
//
//  Created by Alexander Scown on 20/6/18.
//  Copyright Â© 2018 Alex Scown. All rights reserved.
//

import Cocoa

class Ram: NSObject {

    private var ram = [UInt8]()
    
    func reset() {
        ram = [
            0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
            0x20, 0x60, 0x20, 0x20, 0x70, // 1
            0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
            0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
            0x90, 0x90, 0xF0, 0x10, 0x10, // 4
            0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
            0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
            0xF0, 0x10, 0x20, 0x40, 0x40, // 7
            0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
            0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
            0xF0, 0x90, 0xF0, 0x90, 0x90, // A
            0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
            0xF0, 0x80, 0x80, 0x80, 0xF0, // C
            0xE0, 0x90, 0x90, 0x90, 0xE0, // D
            0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
            0xF0, 0x80, 0xF0, 0x80, 0x80, // F
        ] + [UInt8](repeating: 0, count: 4096 - 80)
    }
    
    subscript(index: Int) -> UInt8 {
        get {
            return ram[index]
        }
        set(newElm) {
            ram[index] = newElm
        }
    }
    
    subscript(index: Range<Int>) -> [UInt8] {
        get {            
            return Array(ram[index])
        }
        set(newElm) {
            ram.replaceSubrange(index, with: newElm)
        }
    }
    
}
